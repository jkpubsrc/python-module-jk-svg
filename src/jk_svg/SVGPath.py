

import typing

import jk_typing
import jk_hwriter

from .AbstractSVGElement import AbstractSVGElement
from ._AttrMixinCXCY import _AttrMixinCXCY
from ._AttrMixinRXRY import _AttrMixinRXRY





class SVGPath(AbstractSVGElement):

	################################################################################################################################
	## Constructor
	################################################################################################################################

	def __init__(self):
		super().__init__("path")
	#

	################################################################################################################################
	## Public Properties
	################################################################################################################################

	################################################################################################################################
	## Helper Methods
	################################################################################################################################

	################################################################################################################################
	## Public Methods
	################################################################################################################################

	"""
	TODO
	def getBoundingPoints(self):
		yield from super().getBoundingPoints()
		yield self.cx - self.rx, self.cy
		yield self.cx + self.rx, self.cy
		yield self.cx, self.cy - self.ry
		yield self.cx, self.cy + self.ry
	#
	"""

#












